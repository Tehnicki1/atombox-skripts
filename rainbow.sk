command /rainbowitem sign:
    permission: rainbowitem.give
    trigger:
        give player a paper named "§b§lRainbowChat-Perk" with lore "§fUse /rainbowchat to activate!"
        send "You have received a RainbowChat activation item!" to player

on rightclick:
    if player's held item is paper named "§b§lRainbowChat-Perk":
        cancel event
        send "§a§lYou have unlocked RainbowChat!" to player
        make console execute command "lp user %player% permission set rainbow.chat true"
        remove 1 of player's held item from player
        play sound "entity.player.levelup" with volume 1 and pitch 1 to player
function decimalToHexadecimal(number: number) :: string:
    return ("00" if {_number} <= 0, else ("FF")) if {_number} is not between 0 and 255
    return join (character at (mod((floor({_number} / 16)), 16) + 1) in "0123456789ABCDEF") and (character at ((mod({_number}, 16)) + 1) in "0123456789ABCDEF")
 
function rainbow(input: string, wrapAmount: number = -1, lightness: number = 0.5) :: string:
    set {_delta} to 360 / ({_wrapAmount} if {_wrapAmount} > 0, else length of {_input})
    set {_lightnessModifier} to (({_lightness}*2)-1) * 255
    set {_angle} to 90
    loop length of {_input} times:
        set {_character} to character at loop-value in {_input}
        if {_character} or (character at (loop-value - 1) in {_input}) is "§":
            if "abcdefklmnor0123456789" contains {_character}:
                set {_format} to (join {_format} and "&%{_character}%") if {_character} is not "r", else ("")
            continue
        set {_output} to join {_output}, "<##%decimalToHexadecimal((0.5 * (sin({_angle}) + 1)) * 255 + {_lightnessModifier})%%decimalToHexadecimal((0.5 * (sin({_angle} + 120) + 1)) * 255 + {_lightnessModifier})%%decimalToHexadecimal((0.5 * (sin({_angle} + 240) + 1)) * 255 + {_lightnessModifier})%>", {_format} and {_character}
        remove {_delta} from {_angle}
    return colored {_output}
 
function gradient(input: string, startColor: numbers, endColor: numbers, wrapAmount: number = -1) :: string:
    set {_delta} to 180 / ({_wrapAmount} if {_wrapAmount} > 0, else (length of uncolored {_input}) - 1)
    set {_angle} to 90
    loop length of {_input} times:
        set {_character} to character at loop-value in {_input}
        if {_character} or (character at (loop-value - 1) in {_input}) is "§":
            if "abcdefklmnor0123456789" contains {_character}:
                set {_format} to (join {_format} and "&%{_character}%") if {_character} is not "r", else ("")
            continue
        set {_startColorProportion} to (0.5 * (sin({_angle}) + 1))
        set {_endColorProportion} to (0.5 * (sin({_angle} + 180) + 1))
        set {_output} to join {_output}, "<##%decimalToHexadecimal(({_startColor::1} * {_startColorProportion}) + ({_endColor::1} * {_endColorProportion}))%%decimalToHexadecimal(({_startColor::2} * {_startColorProportion}) + ({_endColor::2} * {_endColorProportion}))%%decimalToHexadecimal(({_startColor::3} * {_startColorProportion}) + ({_endColor::3} * {_endColorProportion}))%>", {_format} and {_character}
        add {_delta} to {_angle}
    return colored {_output}

on chat:
  if {rc::%player%} is true:
    set message to rainbow(colored message, 20, 0.7)

command /rainbowchat:
    permission: rainbow.chat
    trigger:
        if {rc::%player%} is true:
            send "&b&lRainbowChat &8» &7Disabled RainbowChat"
            set {rc::%player%} to false
        else:
            send "&b&lRainbowChat &8» &7Enabled RainbowChat"
            set {rc::%player%} to true